services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    develop:
      watch:
        - action: sync
          path: ./api
          target: /app
        - action: sync
          path: ./libs
          target: /app/libs
    ports:
      - "8080:80"
    command: uvicorn app:app --reload --host 0.0.0.0 --port 80
    container_name: api
    environment:
      SIM_SEARCH_TOP_K: "30"
      REDIS_URL: "redis://redis:6379"
      CHROMA_HOST: "chromadb"
      CHROMA_PORT: "8000"
      CORCEL_API_KEY: "${CORCEL_API_KEY}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      RERANKER_HOST: "reranker"
      RERANKER_PORT: "80"
      LOG_LEVEL: "INFO"
      PROFILING_ENABLED: "FALSE"
    depends_on:
      - chromadb
      - redis
    networks:
      - net
    profiles: ['apis']

  crawler:
    build:
      context: .
      dockerfile: crawler/Dockerfile
    container_name: crawler
    command: python main.py
    develop:
      watch:
        - action: sync+restart
          path: ./crawler
          target: /app
        - action: sync+restart
          path: ./libs
          target: /app/libs
    environment:
      GITHUB_API_KEY: "${GITHUB_API_KEY}"
      CORCEL_API_KEY: "${CORCEL_API_KEY}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      CHROMA_HOST: "chromadb"
      MONGO_URL: "mongodb://mongodb:27017"
      CHROMA_PORT: "8000"
      IS_PERSISTENT: "TRUE"
      ANONYMIZED_TELEMETRY: "FALSE"
      LOG_LEVEL: "INFO"
    depends_on:
      - chromadb
    networks:
      - net
    volumes:
      - crawl_stats_data:/crawl_stats
    profiles: [ 'crawler' ]


  reranker:
    build:
      context: .
      dockerfile: reranker/Dockerfile
    command: uvicorn api:app --reload --host 0.0.0.0 --port 80
    container_name: reranker
    ports:
      - "8081:80"
    develop:
      watch:
        - action: sync
          path: ./reranker
          target: /app
        - action: sync
          path: ./libs
          target: /app/libs
    environment:
      CROSSENCODER_TOP_K: "6"

    networks:
      - net
    links:
      - api
    profiles: [ 'apis' ]


  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    volumes:
      - index_data:/chroma/.chroma/index
    ports:
      - "8000:8000"
    environment:
      CHROMA_PORT: "8000"
      IS_PERSISTENT: "TRUE"
      ANONYMIZED_TELEMETRY: "FALSE"
      CHROMA_STORAGE_PATH: ""
    networks:
      - net


  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - net
    profiles: [ 'apis' ]


  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - net
#    environment:
#        MONGO_INITDB_DATABASE: 'init'
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: pls_add_persistent_disks_to_render
    volumes:
      - crawl_stats_data:/data/db
    profiles: [ 'crawler']

volumes:
  index_data:
    driver: local
  crawl_stats_data:
    driver: local


networks:
  net:
    driver: bridge